#!/usr/bin/python3
"""Module that factorizes as many numbers possible to a product of
two smaller numbers(factors)"""
import math
import time
from sys import argv


def factor_me(val):
    """Decompose to a simple integer greater than 1"""

    if val % 2 == 0:
        x = 2
        print("{}={}*{}".format(val, int(val // x), x))
    else:
        s = int(math.sqrt(val)) + 1
        for x in range(3, s, +2):
            if val % x == 0:
                print("{}={}*{}".format(val, int(val // x), x))
                return
            if val % (s + x) == 0:
                print("{}={}*{}".format(val, s + x, int(val//(s + x))))
                return
            if val % (s - x) == 0:
                print("{}={}*{}".format(val, s - x, int(val//(s - x))))
                return


def factors(filename, timer=5):
    """Read file name and print"""
    start_time = time.time()
    try:
        with open(filename, encoding="utf-8") as file_me:
            for x in file_me.readlines():
                num = int(x)
                factor_me(num)

                elapsed = time.time() - start_time
                if elapsed > timer:
                    return
    except FileNotFoundError:
        print("File Not Found")
    except ValueError:
        print("Non-Integer")
    except Exception as e:
        print("Error", e)


if __name__ == "__main__":
    if len(argv) != 2:
        print("Usage: {} <filename>".format(argv[0]))
        exit(1)

    factors(argv[1])
